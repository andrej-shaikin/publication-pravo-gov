"""init

Revision ID: c6d4e59368bd
Revises: 
Create Date: 2022-09-02 08:54:28.225044

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c6d4e59368bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Активен'),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True, comment='Уникальный идентификатор'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Дата последнего изменения'),
    sa.Column('name', sa.String(length=512), nullable=True, comment='Наименование'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_document_types_id'), 'document_types', ['id'], unique=True)
    op.create_table('npa_sections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Активен'),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True, comment='Уникальный идентификатор'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Дата последнего изменения'),
    sa.Column('code', sa.String(length=64), nullable=True, comment='Код'),
    sa.Column('name', sa.String(length=512), nullable=True, comment='Наименование'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание'),
    sa.Column('is_agencies_of_state_authorities', sa.Boolean(), nullable=True, comment='Орган государственной власти'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_npa_sections_id'), 'npa_sections', ['id'], unique=True)
    op.create_table('signatory_authorities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Активен'),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True, comment='Уникальный идентификатор'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Дата последнего изменения'),
    sa.Column('name', sa.String(length=512), nullable=True, comment='Наименование'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_signatory_authorities_id'), 'signatory_authorities', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_signatory_authorities_id'), table_name='signatory_authorities')
    op.drop_table('signatory_authorities')
    op.drop_index(op.f('ix_npa_sections_id'), table_name='npa_sections')
    op.drop_table('npa_sections')
    op.drop_index(op.f('ix_document_types_id'), table_name='document_types')
    op.drop_table('document_types')
    # ### end Alembic commands ###
